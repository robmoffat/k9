<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.kite9</groupId>
	<artifactId>k9-server</artifactId>
	<version>2.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>Kite9 Server</name>
	<description>Kite9 Redux Server</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.10.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<!-- Kite9 -->
		<dependency>
			<groupId>org.kite9</groupId>
			<artifactId>kite9-visualization</artifactId>
			<version>1.0.RC1-SNAPSHOT</version>
		</dependency>
        <dependency>
          <groupId>org.apache.xmlgraphics</groupId>
          <artifactId>batik-transcoder</artifactId>
          <version>1.9.1</version>
        </dependency>
        
        <!-- Command before/after state comparison -->
        <dependency>
            <groupId>org.xmlunit</groupId>
            <artifactId>xmlunit-core</artifactId>
            <version>2.1.0</version>
        </dependency>
        
		
		<!-- Spring Infrastructure -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-rest</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-hateoas</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-websocket</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-data</artifactId>
			<version>4.0.3.RELEASE</version>
		</dependency>

		<!-- Database connections -->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.38</version>
		</dependency>

		<!-- testing -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>test</scope>
		</dependency>
    
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			
			<plugin>
		        <groupId>com.github.eirslett</groupId>
		        <artifactId>frontend-maven-plugin</artifactId>
		        <version>1.0</version>
	            <configuration>
	            	<installDirectory>target/frontend</installDirectory>
			        <workingDirectory>src/main/frontend</workingDirectory>
			    </configuration>
			    <executions>
			    	<execution>
						<id>install node and npm</id>
						<goals>
						    <goal>install-node-and-npm</goal>
						</goals>
						<configuration>
							<nodeVersion>v5.10.1</nodeVersion>
							<npmVersion>3.8.3</npmVersion>
						</configuration>
					</execution>
					<execution>
					    <id>npm install</id>
					    <goals>
					        <goal>npm</goal>
					    </goals>
					    <configuration>
					        <!-- optional: The default argument is actually
					        "install", so unless you need to run some other npm command,
					        you can remove this whole <configuration> section.
					        -->
					        <arguments>install</arguments>
					    </configuration>
					</execution>
					<execution>
					    <id>webpack build</id>
					    <goals>
					        <goal>webpack</goal>
					    </goals>
					    <configuration>
					        <arguments>--display-modules --display-chunks</arguments>
					    </configuration>
					</execution>
					<execution>
					    <id>default-cli</id>
					    <goals>
					        <goal>npm</goal>
					    </goals>
					    <phase>none</phase>
						<configuration>
					        <arguments>run watch</arguments>
					    </configuration>
					</execution>
					<!-- execution>
					    <id>build testing</id>
					    <goals>
					        <goal>karma</goal>
					    </goals>
					    <phase>test</phase>
					    <configuration>
					        <karmaConf>karma.conf.js</karmaConf>
					    </configuration>
					</execution> -->
					
			    </executions>

	    	</plugin>

			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.14.2</version>
				<configuration>
					<images>
						<image>
							<name>com.kite9/k9-mailer</name>
							<alias>k9-mailer</alias>
							<build>
								<from>alterrebe/postfix-relay</from>
							</build>
							
							<run>
								<envPropertyFile>${project.basedir}/src/docker/${env.DOCKER_MACHINE_NAME}.mail.properties</envPropertyFile>
								<log />
								<ports>
									<port>25:25</port>
								</ports>
								<wait>
									<log>success: postfix entered RUNNING state</log>
									<time>30000</time>							
								</wait>
							</run>
						</image>
						<image>
							<name>com.kite9/k9-server</name>
							<alias>k9-server</alias>
							<build>
								<from>java:8</from>
								<ports>
									<port>8080</port>
								</ports>

								<entryPoint>
									<exec>
										<arg>java</arg>
										<arg>-jar</arg>
										<arg>-Djava.security.egd=file:/dev/./urandom</arg>
										<arg>/app/${project.build.finalName}.${project.packaging}</arg>
									</exec>
								</entryPoint>
								<assembly>								
									<basedir>/app</basedir>
									<descriptorRef>artifact</descriptorRef>
								</assembly>
							</build>
							<run>
								<labels>
									<environment>local</environment>
								</labels>
								<envPropertyFile>${project.basedir}/src/docker/${env.DOCKER_MACHINE_NAME}.properties</envPropertyFile>
								<extraHosts>
									<host>mysql:Robs-MacBook.local</host>
								</extraHosts>
								<ports>
									<port>8080:8080</port>
								</ports>
								<links>
								  <link>k9-mailer</link>
								</links>
								<wait>
									<log>Started Kite9ServerApplication</log>
									<time>30000</time>
								</wait>
								<log />
							</run>
						</image>
					</images>
				</configuration>

				<executions>
					<execution>
						<id>start</id>
						<phase>pre-integration-test</phase>
						<goals>
							<!-- "build" should be used to create the images with the artifact -->
							<goal>build</goal>
							<goal>start</goal>
						</goals>
					</execution>
					<execution>
						<id>stop</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.19.1</version>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>


</project>
